<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="OS1-32">
  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:macro name="OS1-32" params="*origin parent:=base_footprint name:=os1_sensor active topic_points:=/ouster/points topic_imu:=/ouster/imu hz:=10 lasers:=64 samples:=512 min_range:=0.9 max_range:=75.0 noise:=0.008 min_angle:=-${M_PI} max_angle:=${M_PI} lidar_link:=os1_lidar imu_link:=os1_imu vfov_min:=-.26 vfov_max:=.26">

    <joint name="${name}_mount_joint" type="fixed">
      <xacro:insert_block name="origin" /> 
      <parent link="${parent}"/>
      <child link="${name}"/>
    </joint>

    <link name="${name}">
      <inertial>
         <mass value="0.33"/>
         <origin xyz="0 0 0.0365" rpy="0 0 0" />
         <inertia ixx="0.000241148" ixy="0" ixz="0"
          iyy="0.000241148" iyz="0" izz="0.000264"/>
      </inertial>
      <collision name="base_collision">
         <origin xyz="0 0 0.0365" rpy="0 0 0" />
         <geometry>
 	        <cylinder radius="0.04" length="0.073"/>
         </geometry>
      </collision>
      <visual name="base_visual">
         <origin xyz="0 0 0.0" rpy="0 0 1.5707" />
         <geometry>
           <mesh filename="file://$(find eufs_sensors)/meshes/os1_32.dae" />
           <!-- <cylinder length="0.073" radius="0.04" /> -->
         </geometry>
      </visual>
    </link>

    <link name="${imu_link}" />

    <link name="${lidar_link}" />
    

    <joint name="${name}_imu_link_joint" type="fixed">
      <parent link="${name}" />
      <child link="${imu_link}" />
      <origin xyz="0.006253 -0.011775 0.007645" rpy="0 0 0" />
    </joint>
    <gazebo reference="${imu_link}">
    </gazebo>

    <joint name="${name}_lidar_link_joint" type="fixed">
      <parent link="${name}" />
      <child link="${lidar_link}" />
      <origin xyz="0.0 0.0 0.03618" rpy="0 0 0" />
    </joint>

    <!-- Simulate raw perception sensors only if we're not using the abstracted perception simulation -->
    <xacro:unless value="${active}">
      <!-- Gazebo requires the velodyne_gazebo_plugins package -->
      <gazebo reference="${name}">
        <sensor type="ray" name="${name}-sensor">
          <always_on>true</always_on>
          <pose>0 0 0 0 0 0</pose>
          <visualize>false</visualize>
          <update_rate>${hz}</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>${samples}</samples>
                <resolution>1.0</resolution>
                <min_angle>${min_angle}</min_angle>
                <max_angle>${max_angle}</max_angle>
              </horizontal>
              <vertical>
                <samples>${lasers}</samples>
                <resolution>1.0</resolution>
                <min_angle>-${15.0*M_PI/180.0}</min_angle>
                <max_angle> ${15.0*M_PI/180.0}</max_angle>
              </vertical>
            </scan>
            <range>
              <min>${min_range}</min>
              <max>${max_range}</max>
              <resolution>0.001</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>${noise}</stddev>
            </noise>
          </ray>

          <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <remapping>~/out:=${topic}</remapping>
            </ros>
            <frame_name>${name}</frame_name>
            <radiation_type>infrared</radiation_type>
            <output_type>sensor_msgs/PointCloud2</output_type>
          </plugin>

        </sensor>
      </gazebo>
    </xacro:unless>

  </xacro:macro>
</robot>